--- a/python/scripts/casa.py	1970-01-01 01:00:01.000000000 +0100
+++ b/python/scripts/casa.py	2016-01-29 12:22:24.729968546 +0000
@@ -3,79 +3,6 @@
 import sys
 from casac import *
 
-##
-## first set up CASAPATH
-##
-if os.environ.has_key('CASAPATH') :
-    __casapath__ = os.environ['CASAPATH'].split(' ')[0]
-    if not os.path.exists(__casapath__ + "/data") :
-        raise RuntimeError, "CASAPATH environment variable is improperly set"
-else :
-    __casapath__ = casac.__file__
-    while __casapath__ and __casapath__ != "/" :
-        if os.path.exists( __casapath__ + "/data") :
-            break
-        __casapath__ = os.path.dirname(__casapath__)
-    if __casapath__ and __casapath__ != "/" :
-        os.environ['CASAPATH']=__casapath__ + " linux local host"
-    else :
-        raise RuntimeError, "CASAPATH environment variable must be set"
-
-##
-## next adjust the PYTHONPATH
-##
-
-def adapt_pythonpath(searchroot):
-    # tarball location
-    guess = os.path.join(searchroot, 'lib/python2.7/site-packages/numpy')
-    if os.path.isdir(guess):
-        sys.path.append(os.path.dirname(guess))
-    else:
-        for root, dirs, files in os.walk(searchroot):
-            # skip data folder which might be a network mount
-            if root == searchroot and 'data' in dirs:
-                del dirs[dirs.index('data')]
-            if root.endswith("/numpy"):
-                sys.path.append(os.path.dirname(root))
-                break
-
-if re.match( r'.*/\d+\.\d+\.\d+\w*-\d+$', __casapath__ ) :
-    adapt_pythonpath(os.path.dirname(__casapath__))
-else:
-    adapt_pythonpath(__casapath__)
-
-##
-## next adjust PATH and LD_LIBRARY_PATH
-##
-def setup_path():
-    global __ipcontroller__, __ld_library_path__
-    _rootdir = None
-    if os.path.exists(os.path.join(__casapath__, 'bin', 'casapyinfo')):
-        _rootdir = os.path.join(__casapath__, 'bin')
-    else:
-        for root, dirs, files in os.walk(__casapath__):
-            # skip data folder which might be a network mount
-            if root == __casapath__ and 'data' in dirs:
-                del dirs[dirs.index('data')]
-            if root.endswith("/bin") and "casapyinfo" in files :
-                _rootdir = root
-                break
-    if _rootdir is None:
-        return
-
-    __ipcontroller__ = (lambda fd: fd.readline().strip('\n'))(os.popen(_rootdir + "/casapyinfo --exec 'which ipcontroller'"))
-    if os.path.exists(__ipcontroller__) :
-        os.environ['PATH'] = os.path.dirname(__ipcontroller__) + ":" + os.environ['PATH']
-    else :
-        raise RuntimeError, "cannot configure CASA tasking system"
-    __ld_library_path__ = (lambda fd: fd.readline().strip('\n').split(':'))(os.popen(_rootdir + "/casapyinfo --exec 'echo $LD_LIBRARY_PATH'"))
-    map(lambda x: sys.path.append(x),__ld_library_path__)
-
-setup_path()
-
-##
-## finally load tools
-##
 
 quanta = casac.quanta()
 measures = casac.measures()
