--- a/python/env.py	2016-01-26 10:01:22.394702700 +0000
+++ b/python/env.py	2016-04-30 13:38:44.371793282 +0100
@@ -46,49 +46,16 @@
     if os.environ.has_key("ASAPDATA"):
         if os.path.exists(os.environ["ASAPDATA"]):
             asapdata = os.environ["ASAPDATA"]
-    # use CASAPATH if defined and "data" dir present
-    if not os.environ.has_key("CASAPATH") or \
-            not os.path.exists(os.environ["CASAPATH"].split()[0]+"/data"):
-        os.environ["CASAPATH"] = "%s %s somwhere" % ( asapdata, plf)
 
 def get_revinfo_file():
     """Get the revision of the software. Only useful within casapy."""
-    if not is_casapy:
-        return ' unknown '
-    casapath=os.environ["CASAPATH"].split()
-    versioninfo = sys.version_info
-    pyversion = '%s.%s'%(versioninfo[0],versioninfo[1])
-    revinfo = None
-    if os.path.isdir(casapath[0]+'/'+casapath[1]+'/python/%s/asap'%(pyversion)):
-        # for casa developer environment (linux or darwin)
-        revinfo=casapath[0]+'/'+casapath[1]+'/python/%s/asap/svninfo.txt'%(pyversion)
-    else:
-        # for end-user environments
-        if casapath[1]=='darwin':
-            revinfo=casapath[0]+'/Resources/python/asap/svninfo.txt'
-        else:
-            revinfo=casapath[0]+'/lib/python%s/asap/svninfo.txt'%(pyversion)
-    return revinfo
+    return ' unknown '
 
 def get_revision():
-    revinfo=get_revinfo_file()
-    if os.path.isfile(revinfo):
-        f = file(revinfo)
-        f.readline()
-        revsionno=f.readline()
-        f.close()
-        return revsionno.rstrip()
     return ' unknown '
 
 
 def get_asap_revdate():
-    revinfo=get_revinfo_file() 
-    if os.path.isfile(revinfo):
-        f = file(revinfo)
-        f.readline()
-        f.readline()
-        revdate=f.readline()
-        return revdate.rstrip().lstrip()
     return 'unknown'
 
 
